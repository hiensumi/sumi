#define TASK "VOI"
#include<bits/stdc++.h>
using namespace std; 

bool multitest = false;
#define fast ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define ll long long 
#define int long long
#define db long double
#define mp make_pair
#define pii pair<int,int> 
#define pll pair<ll,ll>
#define vii vector<int>
#define vll vector<ll> 
#define ve vector 
#define uni(a)  sort(all(a)),a.resize(unique(all(a))-a.begin())
#define str string 
#define fi first 
#define se second  
#define pb push_back 
#define pk pop_back 
#define pt pop_front
#define pf push_front
#define sz(x) (int)((x).size())
#define el '\n'
#define f(i,a,b) for(int i=(a);i<=(b);i++)
#define fd(i,a,b) for(int i=(a);i>=(b);i--)
#define FORN(i,a,b) for(int i=(a);i<(b);i++)
#define all(a) a.begin(),a.end() 
#define btpc(a) __builtin_popcount(a) 
#define btctz(a) __builtin_ctz(a) // bit 1 MIN
#define btclz(a) __builtin_clz(a)  // bit 1 MAX
#define            tct  template<typename T>
#define BIT(x,i) ((x>>i)&1)
#define MASK(x) (1<<(x))
ll lg(ll a){return __lg(a);}
ll sq(ll a){return a*a;}  
ll gcd(ll a , ll b){return __gcd(a,b);} 
ll lcm(ll a,  ll b){return a/gcd(a,b)*b;}
tct bool mini(T& a,const T& b){return (a>b)?a=b,1:0;}
tct bool maxi(T& a,const T& b){return (a<b)?a=b,1:0;}

tct void prt(T a[] ,int n ){f(i,1,n)cout<<a[i]<<" ";cout<<el;}
#define print(a) for(auto  _v : a )cout<<_v<<" ";cout<<'\n';

const int N =1e6+5, maxN=20, oo = 2e9, CH = 26 , size = 1e3 +5;
const ll sm = 1e9+7, base=311, inf = (int)1e9 , llinf = (ll)1e18 + 7LL , MOD=1e9+7 , LG=__lg(N);
const db PI = acos(-1), eps = 1e-9 ;
int xx[] = {0,0,0,-1,1}; 
int yy[] = {0,-1,1,0,0};

// end template and solution
struct DL{
    int u,v,w;
    friend bool operator < (const DL&a,const DL&b){
        return a.w<b.w;
    }
} c[N];

int n,m,w,sza,szb,a[N],b[N],SZA[N],SZB[N],par[N];
int d[N];
void read()
{
    cin>>n>>m>>w>>sza>>szb;
    f(i,1,m){
        int u,v,w;
        cin>>u>>v>>w;
        c[i]={u,v,w};
    }
    f(i,1,sza){
        int x; cin>>x; a[x]=1;
    }
    f(i,1,szb){
        int x; cin>>x; b[x]=1;
    }
}

namespace small{
    void solve(){

    }
}
int find(int u){
    return u==par[u]?u:par[u]=find(par[u]);
}
void HN(int u,int v){
    u=find(u); v=find(v);
    if(u!=v){
        par[v]=u;
        SZA[u]+=SZA[v];
        SZB[u]+=SZB[v];
    }
}
ll process(int val){
    f(i,1,n) d[i]=0;
    f(i,1,n) par[i]=i;
    f(i,1,n) SZA[i]=a[i];
    f(i,1,n) SZB[i]=b[i];
    f(i,1,m){
        if(c[i].w>val) continue;
        HN(c[i].u,c[i].v);
    }
    ll res=0;
    f(i,1,n){
        int r=find(i);
        if(d[r]==0){
            d[r]=1;
            res+=SZA[r]*SZB[r];
        }
    }
    return res;
}

namespace big{
    void solve(){
        sort(c+1,c+m+1);
        cout<<process(w)-process(w-1);
    }
}

signed main()    
{
    srand(time(0));
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    if (fopen(TASK".INP", "r"))
    {
        freopen(TASK".INP", "r", stdin);
        freopen(TASK".OUT", "w", stdout);
    }
    fast;
    int test =1; 
  //  cin>>test;
   while(test--)
    {
        read(); 
        small::solve();
        big::solve();
    }
    cerr << "\nTime: " << clock() << "ms\n";
}
